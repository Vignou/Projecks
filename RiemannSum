#include <iostream>
#include <cmath>
#include <fstream>
#include <iomanip>

double RightRiemannSum(int n)
{
    double dx = 2.0 / n;
    double sum = 0.0;
    double x = 0, y = 0;
    for (int k = 1; k <= n; k++)
    {
        x = k * dx;
        y = std::pow(x, 3) + 1;
        sum += y * dx;
    }
    return sum;
}
double LeftRiemannSum(int n)
{
    double dx = 2.0 / n;
    double sum = 0.0;
    double x = 0, y = 0;
    for (int k = 1; k <= n; k++)
    {
        x = (k - 1) * dx;
        y = std::pow(x, 3) + 1;
        sum += y * dx;
    }
    return sum;
}
double MidPointRiemannSum(int n)
{
    double dx = 2.0 / n;
    double sum = 0.0;
    double x = 0, y = 0;
    for (int k = 1; k <= n; k++)
    {
        x = (k - 0.5) * dx;
        y = std::pow(x, 3) + 1;
        sum += y * dx;
    }
    return sum;
}
int main()
{

    std::ofstream File("RiemannSum.csv");
    File << "n,L,R,M\n";
    for (int i = 20; i <= 10000; i += 20)
    {
        File << i << ',' << std::setprecision(11) << LeftRiemannSum(i) << ',' << RightRiemannSum(i) << ',' << MidPointRiemannSum(i) << '\n';
    }
    std::cin.get();
    return 0;
}
